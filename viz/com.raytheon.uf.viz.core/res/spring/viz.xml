<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/util
  http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="product" class="org.eclipse.core.runtime.Platform" factory-method="getProduct"/>
  
    <bean id="productName" factory-bean="product" factory-method="getName"/>
    
    <bean id="version" factory-bean="product" factory-method="getProperty">
       <constructor-arg value="version"/>
    </bean>
    
    <bean id="args" class="com.raytheon.uf.viz.core.ProgramArguments" factory-method="getInstance"/>
    
    <bean id="component" factory-bean="args" factory-method="getString">
       <constructor-arg value="-component"/>
    </bean>
    
    <bean id="appInfo" class="com.raytheon.uf.common.util.app.AppInfo" factory-method="initialize">
        <constructor-arg ref="productName"/>
        <!--
            Version information will be available in a system property when dynamic. The dynamic
            version will override the version defined at the time CAVE was built.
        -->
        <constructor-arg value="#{systemProperties['vizVersion'] == null ? version : systemProperties['vizVersion']}"/>
        <constructor-arg value="#{component != null ? component : 'viz'}"/>
    </bean>

    <bean id="caveCredentialHandler" class="com.raytheon.uf.viz.core.comm.CaveHttpCredentialsHandler" />

    <bean id="httpClientConfigBuilder" class="com.raytheon.uf.common.comm.HttpClientConfigBuilder">
       <property name="socketTimeout" value="330000"/>
       <property name="connectionTimeout" value="10000"/>
       <property name="maxConnections" value="10"/>
       <property name="httpAuthHandler" ref="caveCredentialHandler" />
    </bean>
    
    <bean id="httpClientConfig" factory-bean="httpClientConfigBuilder" factory-method="build"/>
    
	<bean id="httpClient" class="com.raytheon.uf.common.comm.HttpClient" factory-method="configureGlobalInstance" depends-on="appInfo">
	   <constructor-arg ref="httpClientConfig"/>
	</bean>	

	<bean id="baosPool" class="com.raytheon.uf.common.util.ByteArrayOutputStreamPool" factory-method="getInstance">
	   <property name="maxPoolSize" value="8"/>
	   <property name="initStreamSize" value="1"/>
	   <property name="maxStreamSize" value="5.5"/>
	</bean>

   <bean id="vizMonitorHandler" class="com.raytheon.uf.viz.core.status.VizMonitorHandler">
      <property name="monitorEndpoint" value="edex.alerts.msg"/>
   </bean>

   <bean class="com.raytheon.uf.common.geospatial.LogRedirector" factory-method="setGeotoolsLogFactory">
        <constructor-arg value="org.geotools.util.logging.Log4JLoggerFactory"/>
   </bean>
   
   <bean class="com.raytheon.uf.common.geospatial.SpatialQueryFactory"
        factory-method="setImplementation">
        <constructor-arg value="com.raytheon.uf.viz.core.spatial.SpatialDbQuery"/>    
   </bean>
   
   <!-- These util:constant beans should not be required, they overwrite the ones in *-common.xml files for CAVE since
        CAVE just gets a ClassNotFoundException on boot... 
        someday the reason should be figured out and these beans removed -->
   <util:constant id="requestServerKey"
        static-field="com.raytheon.uf.common.auth.RequestConstants.REQUEST_SERVER" />
   
   <!-- Register routers -->
   <bean id="requestRouterRegistry"
        class="com.raytheon.uf.common.serialization.comm.RequestRouter"
        factory-method="getRouterRegistry" />

    <bean id="requestServiceRouter" class="com.raytheon.uf.viz.core.requests.ServerRequestRouter">
        <constructor-arg ref="requestServerKey" />
        <!-- This bean will cause all RequestRouter.route(request) calls to be serialized over to EDEX -->
    </bean>

    <bean factory-bean="requestRouterRegistry" factory-method="register">
        <constructor-arg ref="requestServerKey" />
        <constructor-arg ref="requestServiceRouter" />
    </bean>
    
    <bean id="recordFactory" class="com.raytheon.uf.viz.core.RecordFactory" factory-method="getInstance"/>
    
    <bean id="recordFactoryRegisteredToDataURIUtil"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>com.raytheon.uf.common.dataplugin.annotations.DataURIUtil</value>
		</property>
		<property name="targetMethod">
			<value>setClassMapper</value>
		</property>
		<property name="arguments" ref="recordFactory" />
	</bean>
	    
    <bean id="vizSubClassLocator" class="com.raytheon.uf.viz.core.reflect.SubClassLocator"/>
    <bean class="com.raytheon.uf.common.style.StyleManager" factory-method="getInstance">
        <property name="subClassLocator" ref="vizSubClassLocator" />
    </bean>

</beans>