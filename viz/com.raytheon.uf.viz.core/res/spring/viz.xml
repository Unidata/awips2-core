<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
  http://www.springframework.org/schema/util
  http://www.springframework.org/schema/util/spring-util-3.1.xsd">
  
    <bean id="caveCredentialHandler" class="com.raytheon.uf.viz.core.comm.CaveHttpsCredentialsHandler" />
    
    <bean id="httpsConfiguration" class="com.raytheon.uf.viz.core.comm.HttpsConfiguration" />
    
	<bean id="httpClient" class="com.raytheon.uf.common.comm.HttpClient" factory-method="getInstance">
	   <property name="socketTimeout" value="330000"/>
	   <property name="connectionTimeout" value="10000"/>
	   <property name="maxConnectionsPerHost" value="10"/>
	   <property name="compressRequests" value="false"/>
	   <property name="gzipResponseHandling" value="false"/>	   
	   <property name="handler" ref="caveCredentialHandler" />
	   <property name="httpsConfiguration" ref="httpsConfiguration" />
	</bean>	

	<bean id="baosPool" class="com.raytheon.uf.common.util.ByteArrayOutputStreamPool" factory-method="getInstance">
	   <property name="maxPoolSize" value="8"/>
	   <property name="initStreamSize" value="1"/>
	   <property name="maxStreamSize" value="5.5"/>
	</bean>

   <bean id="vizMonitorHandler" class="com.raytheon.uf.viz.core.status.VizMonitorHandler">
      <property name="monitorEndpoint" value="edex.alerts.msg"/>
   </bean>

   <bean class="com.raytheon.uf.common.geospatial.LogRedirector" factory-method="setGeotoolsLogFactory">
        <constructor-arg value="org.geotools.util.logging.Log4JLoggerFactory"/>
   </bean>
   
   <!-- These util:constant beans should not be required, they overwrite the ones in *-common.xml files for CAVE since
        CAVE just gets a ClassNotFoundException on boot... 
        someday the reason should be figured out and these beans removed -->
   <util:constant id="requestServerKey"
        static-field="com.raytheon.uf.common.auth.RequestConstants.REQUEST_SERVER" />
   
   <!-- Register routers -->
   <bean id="requestRouterRegistry"
        class="com.raytheon.uf.common.serialization.comm.RequestRouter"
        factory-method="getRouterRegistry" />

    <bean id="requestServiceRouter" class="com.raytheon.uf.viz.core.requests.ServerRequestRouter">
        <constructor-arg ref="requestServerKey" />
        <!-- This bean will cause all RequestRouter.route(request) calls to be serialized over to EDEX -->
    </bean>

    <bean factory-bean="requestRouterRegistry" factory-method="register">
        <constructor-arg ref="requestServerKey" />
        <constructor-arg ref="requestServiceRouter" />
    </bean>
    
    <bean id="recordFactory" class="com.raytheon.uf.viz.core.RecordFactory" factory-method="getInstance"/>
    
    <bean id="recordFactoryRegisteredToDataURIUtil"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>com.raytheon.uf.common.dataplugin.annotations.DataURIUtil</value>
		</property>
		<property name="targetMethod">
			<value>setClassMapper</value>
		</property>
		<property name="arguments" ref="recordFactory" />
	</bean>
	    
    <bean id="vizSubClassLocator" class="com.raytheon.uf.viz.core.reflect.SubClassLocator"/>
    <bean class="com.raytheon.uf.common.style.StyleManager" factory-method="getInstance">
        <property name="subClassLocator" ref="vizSubClassLocator" />
    </bean>

</beans>