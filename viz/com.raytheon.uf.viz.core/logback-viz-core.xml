<configuration debug="false" scan="true">
   <!-- Only define when not wanting to use the UF Standard.
   <property scope="context" name="log.message.pattern" value="%-5p %d [%t] %c{0}: %m%n"/>
   -->
   
   <!-- this appender will send System.err and System.out to the console log -->
   <appender name="CaveConsoleAppender" class="com.raytheon.uf.common.logback.appender.EnvConfigSysStreamFileAppender">      
      <encoder class="com.raytheon.uf.common.logback.encoder.UFStdEncoder"/> 
      <!-- set envLogVar after encoder to avoid warning -->
      <envLogVar>LOGFILE_CONSOLE</envLogVar>
   </appender>
   
   <!-- TODO should somehow be contributed from alertviz plugin -->
   <appender name="AlertvizAppender" class="com.raytheon.uf.viz.alertviz.StatusMessageAppender">
      <connFactoryClass>org.apache.activemq.ActiveMQConnectionFactory</connFactoryClass>
      <uri>tcp://localhost:61998</uri>
      <destName>messages</destName>
   </appender>
   
   <!-- these two appenders will allow System.out and System.err to print to the console when
       -noredirect flag is used at cave startup-->
   <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
      <target>System.out</target> 
      <encoder class="com.raytheon.uf.common.logback.encoder.UFStdEncoder"/> 
      <!-- TODO does anyone know why there is an InvertedThresholdFilter here? -->
      <filter class="com.raytheon.uf.common.logback.filter.InvertedThresholdFilter">
         <level>INFO</level>         
      </filter>
   </appender>
   <appender name="errConsole" class="ch.qos.logback.core.ConsoleAppender">
      <target>System.err</target>
      <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        <level>WARN</level>
      </filter> 
      <encoder class="com.raytheon.uf.common.logback.encoder.UFStdEncoder"/> 
   </appender>
   
   <!-- this appender will log the messages sent to UFStatus -->
   <appender name="CaveLogAppender" class="com.raytheon.uf.common.logback.appender.EnvConfigurableRollingFileAppender">
      <!--  file and fileNamePattern will be overridden by the env variable if present, but are required by logback -->
      <file>cave-logs.log</file>
      <envLogVar>LOGFILE_CAVE</envLogVar>
      <rollingPolicy class="com.raytheon.uf.common.logback.policy.EnvConfigurableFixedWindowRollingPolicy">
         <fileNamePattern>cave-logs.log%i</fileNamePattern>
         <envLogVar>LOGFILE_CAVE</envLogVar>
         <minIndex>1</minIndex>
         <maxIndex>5</maxIndex>
      </rollingPolicy>
      <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
         <maxFileSize>2GB</maxFileSize>
      </triggeringPolicy>
      <append>true</append>
      <encoder class="com.raytheon.uf.common.logback.encoder.UFStdEncoder"/> 
   </appender>    
   
   <appender name="PerformanceLogAppender" class="com.raytheon.uf.common.logback.appender.EnvConfigurableRollingFileAppender">
      <!--  file and fileNamePattern will be overridden by the env variable if present, but are required by logback -->
      <file>cave-performance.log</file>
      <envLogVar>LOGFILE_PERFORMANCE</envLogVar>
      <rollingPolicy class="com.raytheon.uf.common.logback.policy.EnvConfigurableFixedWindowRollingPolicy">
         <fileNamePattern>cave-performance.log%i</fileNamePattern>
         <envLogVar>LOGFILE_PERFORMANCE</envLogVar>
         <minIndex>1</minIndex>
         <maxIndex>5</maxIndex>
      </rollingPolicy>
      <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
         <maxFileSize>2GB</maxFileSize>
      </triggeringPolicy>
      <append>true</append>
      <encoder class="com.raytheon.uf.common.logback.encoder.UFStdEncoder"/> 
   </appender>    
   
   <!-- TODO should somehow be contributed from viz.gfe plugin -->
   <appender name="ProductEditorLogAppender" class="com.raytheon.uf.common.logback.appender.EnvConfigurableRollingFileAppender">
      <!--  file and fileNamePattern will be overridden by the env variable if present, but are required by logback -->
      <file>cave-producteditor.log</file>
      <envLogVar>LOGFILE_PRODUCT_EDITOR</envLogVar>
      <rollingPolicy class="com.raytheon.uf.common.logback.policy.EnvConfigurableFixedWindowRollingPolicy">
         <fileNamePattern>cave-producteditor.log%i</fileNamePattern>
         <envLogVar>LOGFILE_PRODUCT_EDITOR</envLogVar>
         <minIndex>1</minIndex>
         <maxIndex>5</maxIndex>
      </rollingPolicy>
      <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
         <maxFileSize>2GB</maxFileSize>
      </triggeringPolicy>
      <append>true</append>
      <encoder class="com.raytheon.uf.common.logback.encoder.UFStdEncoder"/> 
   </appender>    
   
   <appender name="AsyncCaveLogAppender" class="ch.qos.logback.classic.AsyncAppender">
      <queueSize>500</queueSize>
      <appender-ref ref="CaveLogAppender"/>      
   </appender>
   
   <appender name="AsyncAlertvizAppender" class="ch.qos.logback.classic.AsyncAppender">
      <queueSize>500</queueSize>      
      <appender-ref ref="AlertvizAppender"/>
   </appender> 
   
   <appender name="AsyncPerfLogAppender" class="ch.qos.logback.classic.AsyncAppender">
      <queueSize>500</queueSize>
      <appender-ref ref="PerformanceLogAppender"/>
   </appender> 

   <appender name="AsyncProductEditorLogAppender" class="ch.qos.logback.classic.AsyncAppender">
      <queueSize>500</queueSize>
      <appender-ref ref="ProductEditorLogAppender"/>
   </appender> 

   <logger name="CaveLogger" additivity="false">
      <level value="ALL"/>
      <appender-ref ref="AsyncCaveLogAppender"/>
      <appender-ref ref="AsyncAlertvizAppender"/>
   </logger>

   <logger name="PerformanceLogger" additivity="false">
      <level value="ALL"/>
      <appender-ref ref="AsyncPerfLogAppender"/>
   </logger>

   <logger name="ProductEditorLogger" additivity="false">
      <level value="ALL"/>
      <appender-ref ref="AsyncProductEditorLogAppender"/>
   </logger>

   <logger name="com.raytheon">
      <level value="INFO"/>
   </logger>

   <logger name="mx4j">
      <level value="ERROR"/>
   </logger>
   <logger name="org.apache">
      <level value="INFO"/>
   </logger>
   <logger name="org.apache.commons.beanutils">
      <level value="WARN"/>
   </logger>
   <logger name="org.apache.qpid">
      <level value="WARN"/>
   </logger>
   <logger name="org.geotools">
      <level value="WARN"/>
   </logger>
   <logger name="org.apache.xbean.spring">
      <level value="WARN"/>
   </logger>
   <logger name="org.springframework">
      <level value="ERROR"/>
   </logger>
   <root> 
      <level value="INFO"/> 
      <appender-ref ref="console"/>
      <appender-ref ref="errConsole"/>
      <appender-ref ref="CaveConsoleAppender"/>
    </root> 
</configuration> 
